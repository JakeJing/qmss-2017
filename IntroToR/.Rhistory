characterData.binary
paste(characterData.binary)
sapply(characterData.binary, paste)
paste(characterData.binary, collapse='')
sapply(characterData.binary, paste, collapse='')
sapply(characterData.binary, paste, sep='')
sapply(characterData.binary, paste, collapse='')
characterData.binary = apply(characterData, 2, convertToBinary)
characterData.binary
apply(characterData.binary,2, paste)
apply(characterData.binary,2, paste, collapse='')
apply(characterData.binary,1, paste, collapse='')
characterData.binary.string = paste(apply(characterData.binary,1, paste, collapse=''),sep='\n')
characterData.binary.string
characterData.binary.string = paste(apply(characterData.binary,1, paste, collapse=''),collapse='\n')
characterData.binary.string
setwd("~/Documents/Teaching/JenaSpringSchool/org/spring-school/IntroToR")
convertToBinary = function(x){
return(as.numeric(as.factor(x))-1)
}
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
data = d2[d2$glotto.family=="dataantic-Congo",]
data = data[data$BasicWordOrder %in% c("SVO","SOV"), ]
data = data[data$AdpositionOrder %in% c("Prepositions","Postpositions"), ]
taxlabels = data$iso_code
characterData = data[,c("BasicWordOrder","AdpositionOrder")]
taxlabels.string = taxlabels[]
numTax = nrow(data)
nchar = ncol(data)
characterData.binary = apply(characterData, 2, convertToBinary)
characterData.binary.string = paste(apply(characterData.binary,1, paste, collapse=''),collapse='\n')
template =
'#NEXUS
BEGIN TAXA;
TITLE Taxa;
DIMENSIONS NTAX=ntax_here;
TAXLABELS
taxlabels_here
;
END;
BEGIN CHARACTERS;
TITLE  Character_Matrix;
LINK TAXA = Taxa;
DIMENSIONS  NCHAR=nchar_here;
FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1";
MATRIX
characterData_here
;
'
characterData
data = d2[d2$glotto.family=="dataantic-Congo",]
head(data)
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
data = d2[d2$glotto.family=="dataantic-Congo",]
head(data)
head(d2)
data = d2[d2$glotto.family=="Atlantic-Congo",]
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
data = d2[d2$glotto.family=="Atlantic-Congo",]
data = data[data$BasicWordOrder %in% c("SVO","SOV"), ]
data = data[data$AdpositionOrder %in% c("Prepositions","Postpositions"), ]
taxlabels = data$iso_code
characterData = data[,c("BasicWordOrder","AdpositionOrder")]
taxlabels.string = taxlabels[]
numTax = nrow(data)
nchar = ncol(data)
characterData.binary = apply(characterData, 2, convertToBinary)
characterData.binary.string = paste(apply(characterData.binary,1, paste, collapse=''),collapse='\n')
template =
'#NEXUS
BEGIN TAXA;
TITLE Taxa;
DIMENSIONS NTAX=ntax_here;
TAXLABELS
taxlabels_here
;
END;
BEGIN CHARACTERS;
TITLE  Character_Matrix;
LINK TAXA = Taxa;
DIMENSIONS  NCHAR=nchar_here;
FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1";
MATRIX
characterData_here
;
'
template = gsub("ntax_here", numTax, template)
template = gsub("taxlabels_here", numTax, template)
template = gsub("characterData_here", characterData.binary.string, template)
taxlabels.string = paste(taxlabels,collapse='')
numChar = ncol(data)
template =
'#NEXUS
BEGIN TAXA;
TITLE Taxa;
DIMENSIONS NTAX=ntax_here;
TAXLABELS
taxlabels_here
;
END;
BEGIN CHARACTERS;
TITLE  Character_Matrix;
LINK TAXA = Taxa;
DIMENSIONS  NCHAR=nchar_here;
FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1";
MATRIX
characterData_here
;
'
template = gsub("ntax_here", numTax, template)
template = gsub("nchar_here", numChar, template)
template = gsub("taxlabels_here", taxlabels.string, template)
template = gsub("characterData_here", characterData.binary.string, template)
template
nex = template
nex = gsub("ntax_here", numTax, nex)
nex = gsub("nchar_here", numChar, nex)
nex = gsub("taxlabels_here", taxlabels.string, nex)
nex = gsub("characterData_here", characterData.binary.string, nex)
cat(nex, file='data/Celtic.nex')
taxlabels.string
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
data = d2[d2$glotto.family=="Atlantic-Congo",]
data = data[data$BasicWordOrder %in% c("SVO","SOV"), ]
data = data[data$AdpositionOrder %in% c("Prepositions","Postpositions"), ]
taxlabels = data$iso_code
characterData = data[,c("BasicWordOrder","AdpositionOrder")]
taxlabels.string = paste(taxlabels,collapse='\n')
numTax = nrow(data)
numChar = ncol(data)
characterData.binary = apply(characterData, 2, convertToBinary)
characterData.binary.string = paste(apply(characterData.binary,1, paste, collapse=''),collapse='\n')
template =
'#NEXUS
BEGIN TAXA;
TITLE Taxa;
DIMENSIONS NTAX=ntax_here;
TAXLABELS
taxlabels_here
;
END;
BEGIN CHARACTERS;
TITLE  Character_Matrix;
LINK TAXA = Taxa;
DIMENSIONS  NCHAR=nchar_here;
FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1";
MATRIX
characterData_here
;
'
nex = template
nex = gsub("ntax_here", numTax, nex)
nex = gsub("nchar_here", numChar, nex)
nex = gsub("taxlabels_here", taxlabels.string, nex)
nex = gsub("characterData_here", characterData.binary.string, nex)
cat(nex, file='data/Celtic.nex')
ncol(data)
data
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
data = d2[d2$glotto.family=="Atlantic-Congo",]
data = data[data$BasicWordOrder %in% c("SVO","SOV"), ]
data = data[data$AdpositionOrder %in% c("Prepositions","Postpositions"), ]
taxlabels = data$iso_code
setwd("~/Documents/Teaching/JenaSpringSchool/org/spring-school/IntroToR")
convertToBinary = function(x){
return(as.numeric(as.factor(x))-1)
}
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
data = d2[d2$glotto.family=="Atlantic-Congo",]
data = data[data$BasicWordOrder %in% c("SVO","SOV"), ]
data = data[data$AdpositionOrder %in% c("Prepositions","Postpositions"), ]
taxlabels = data$iso_code
characterData = data[,c("BasicWordOrder","AdpositionOrder")]
taxlabels.string = paste(taxlabels,collapse='\n')
numTax = nrow(characterData)
numChar = ncol(characterData)
characterData.binary = apply(characterData, 2, convertToBinary)
characterData.binary.string = paste(apply(characterData.binary,1, paste, collapse=''),collapse='\n')
template =
'#NEXUS
BEGIN TAXA;
TITLE Taxa;
DIMENSIONS NTAX=ntax_here;
TAXLABELS
taxlabels_here
;
END;
BEGIN CHARACTERS;
TITLE  Character_Matrix;
LINK TAXA = Taxa;
DIMENSIONS  NCHAR=nchar_here;
FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1";
MATRIX
characterData_here
;
'
nex = template
nex = gsub("ntax_here", numTax, nex)
nex = gsub("nchar_here", numChar, nex)
nex = gsub("taxlabels_here", taxlabels.string, nex)
nex = gsub("characterData_here", characterData.binary.string, nex)
cat(nex, file='data/Celtic.nex')
characterData
characterData
characterData.binary
characterData.binary.string
characterData.binary = cbind(taxlabels,characterData.binary)
characterData.binary
paste(apply(characterData.binary,1, paste, collapse=''),collapse='\n')
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
data = d2[d2$glotto.family=="Atlantic-Congo",]
data = data[data$BasicWordOrder %in% c("SVO","SOV"), ]
data = data[data$AdpositionOrder %in% c("Prepositions","Postpositions"), ]
taxlabels = data$iso_code
characterData = data[,c("BasicWordOrder","AdpositionOrder")]
taxlabels.string = paste(taxlabels,collapse='\n')
numTax = nrow(characterData)
numChar = ncol(characterData)
characterData.binary = apply(characterData, 2, convertToBinary)
characterData.binary = cbind(taxlabels,characterData.binary)
characterData.binary.string = paste(apply(characterData.binary,1, paste, collapse=' '),collapse='\n')
template =
'#NEXUS
BEGIN TAXA;
TITLE Taxa;
DIMENSIONS NTAX=ntax_here;
TAXLABELS
taxlabels_here
;
END;
BEGIN CHARACTERS;
TITLE  Character_Matrix;
LINK TAXA = Taxa;
DIMENSIONS  NCHAR=nchar_here;
FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1";
MATRIX
characterData_here
;
'
nex = template
nex = gsub("ntax_here", numTax, nex)
nex = gsub("nchar_here", numChar, nex)
nex = gsub("taxlabels_here", taxlabels.string, nex)
nex = gsub("characterData_here", characterData.binary.string, nex)
cat(nex, file='data/Celtic.nex')
setwd("~/Documents/Teaching/JenaSpringSchool/org/spring-school/IntroToR")
convertToBinary = function(x){
return(as.numeric(as.factor(x))-1)
}
makeNexusFile = function(taxlabels, characterData, filename){
taxlabels.string = paste(taxlabels,collapse='\n')
numTax = nrow(characterData)
numChar = ncol(characterData)
characterData.binary = apply(characterData, 2, convertToBinary)
characterData.binary = cbind(taxlabels,characterData.binary)
characterData.binary.string = paste(apply(characterData.binary,1, paste, collapse=' '),collapse='\n')
template =
'#NEXUS
BEGIN TAXA;
TITLE Taxa;
DIMENSIONS NTAX=ntax_here;
TAXLABELS
taxlabels_here
;
END;
BEGIN CHARACTERS;
TITLE  Character_Matrix;
LINK TAXA = Taxa;
DIMENSIONS  NCHAR=nchar_here;
FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1";
MATRIX
characterData_here
;
'
nex = template
nex = gsub("ntax_here", numTax, nex)
nex = gsub("nchar_here", numChar, nex)
nex = gsub("taxlabels_here", taxlabels.string, nex)
nex = gsub("characterData_here", characterData.binary.string, nex)
cat(nex, file=filename)
}
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
# Load data for Atlantic Congo
data = d2[d2$glotto.family=="Atlantic-Congo",]
# use only binary categories
data = data[data$BasicWordOrder %in% c("SVO","SOV"), ]
data = data[data$AdpositionOrder %in% c("Prepositions","Postpositions"), ]
taxlabels = data$iso_code
characterData = data[,c("BasicWordOrder","AdpositionOrder")]
makeNexusFile(taxlabels, characterData, "data/Atlantic-Congo.nex")
setwd("~/Documents/Teaching/JenaSpringSchool/org/spring-school/IntroToR")
convertToBinary = function(x){
return(as.numeric(as.factor(x))-1)
}
makeNexusFile = function(taxlabels, characterData, filename){
taxlabels.string = paste(taxlabels,collapse='\n')
numTax = nrow(characterData)
numChar = ncol(characterData)
# convert characters to binary
characterData.binary = apply(characterData, 2, convertToBinary)
# add taxon labels to
#characterData.binary = cbind(taxlabels,characterData.binary)
characterData.binary.string = paste(apply(characterData.binary,1, paste, collapse=' '),collapse='\n')
template =
'#NEXUS
BEGIN TAXA;
TITLE Taxa;
DIMENSIONS NTAX=ntax_here;
TAXLABELS
taxlabels_here
;
END;
BEGIN CHARACTERS;
TITLE  Character_Matrix;
LINK TAXA = Taxa;
DIMENSIONS  NCHAR=nchar_here;
FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1";
MATRIX
characterData_here
;
'
nex = template
nex = gsub("ntax_here", numTax, nex)
nex = gsub("nchar_here", numChar, nex)
nex = gsub("taxlabels_here", taxlabels.string, nex)
nex = gsub("characterData_here", characterData.binary.string, nex)
cat(nex, file=filename)
}
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
# Load data for Atlantic Congo
data = d2[d2$glotto.family=="Atlantic-Congo",]
# use only binary categories
data = data[data$BasicWordOrder %in% c("SVO","SOV"), ]
data = data[data$AdpositionOrder %in% c("Prepositions","Postpositions"), ]
taxlabels = data$iso_code
characterData = data[,c("BasicWordOrder","AdpositionOrder")]
makeNexusFile(taxlabels, characterData, "data/Atlantic-Congo.nex")
setwd("~/Documents/Teaching/JenaSpringSchool/org/spring-school/IntroToR")
convertToBinary = function(x){
return(as.numeric(as.factor(x))-1)
}
makeNexusFile = function(taxlabels, characterData, filename){
taxlabels.string = paste(taxlabels,collapse='\n')
numTax = nrow(characterData)
numChar = ncol(characterData)
# convert characters to binary
characterData.binary = apply(characterData, 2, convertToBinary)
# add taxon labels to
characterData.binary = cbind(taxlabels,characterData.binary)
characterData.binary.string = paste(apply(characterData.binary,1, paste, collapse=' '),collapse='\n')
template =
'#NEXUS
BEGIN TAXA;
TITLE Taxa;
DIMENSIONS NTAX=ntax_here;
TAXLABELS
taxlabels_here
;
END;
BEGIN CHARACTERS;
TITLE  Character_Matrix;
LINK TAXA = Taxa;
DIMENSIONS  NCHAR=nchar_here;
FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1";
MATRIX
characterData_here
;
'
nex = template
nex = gsub("ntax_here", numTax, nex)
nex = gsub("nchar_here", numChar, nex)
nex = gsub("taxlabels_here", taxlabels.string, nex)
nex = gsub("characterData_here", characterData.binary.string, nex)
cat(nex, file=filename)
}
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
# Load data for Atlantic Congo
data = d2[d2$glotto.family=="Atlantic-Congo",]
# use only binary categories
data = data[data$BasicWordOrder %in% c("SVO","SOV"), ]
data = data[data$AdpositionOrder %in% c("Prepositions","Postpositions"), ]
taxlabels = data$iso_code
characterData = data[,c("BasicWordOrder","AdpositionOrder")]
makeNexusFile(taxlabels, characterData, "data/Atlantic-Congo.nex")
setwd("~/Documents/Teaching/JenaSpringSchool/org/spring-school/IntroToR")
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
```
And let's extract from that just the data on languages from the Atlantic Congo family.  To make things simple, we'll just look at langauges which have either SVO or SOV and either Prepostions or Postpositions (so the variables are binary).
```{r}
# Load data for Atlantic Congo
data = d2[d2$glotto.family=="Atlantic-Congo",]
# use only binary categories
data = data[data$BasicWordOrder %in% c("SVO","SOV"), ]
data = data[data$AdpositionOrder %in% c("Prepositions","Postpositions"), ]
```
For the nexus format, we'll need a list of 'taxa' (languages) and the character data.  We'll use the iso code to identify each language, and we'll the character data is just the two linguistic variables.
```{r}
taxlabels = data$iso_code
characterData = data[,c("BasicWordOrder","AdpositionOrder")]
head(data)
head(characterData)
x = table(characterData$BasicWordOrder, characterData$AdpositionOrder)
x
apply(x, 1, sum)
apply(x, 1, sum)
head(convertToBinary(characterData))
head(convertToBinary(characterData$BasicWordOrder))
head(convertToBinary(characterData$AdpositionOrder))
paste(c("a",'b','c'))
paste(c("a",'b','c'), "LETTER:")
paste(c("Johnny",'Joey','Tommy'), "Ramone")
paste(c("Johnny","Joey","Tommy"), "Ramone")
paste(c("a","b","c"),c("A","B","C"), sep="-")
paste(c("super","cali","fragilistic","expialidocious"), collapse = "")
paste(c("Johnny","Joey","Tommy"), "Ramone", sep=" ")
paste(c("super","cali","fragilistic","expialidocious"), collapse = "")
numTax
setwd("~/Documents/Teaching/JenaSpringSchool/org/spring-school/IntroToR")
convertToBinary = function(x){
return(as.numeric(as.factor(x))-1)
}
makeNexusFile = function(taxlabels, characterData, filename){
taxlabels.string = paste(taxlabels,collapse='\n')
numTax = nrow(characterData)
numChar = ncol(characterData)
# convert characters to binary
characterData.binary = apply(characterData, 2, convertToBinary)
# add taxon labels to character section
characterData.binary.withNames = cbind(taxlabels,characterData.binary)
# paste everything together
characterData.binary.string = paste(apply(characterData.binary.withNames,1, paste, collapse=' '),collapse='\n')
########################
# Nexus file template
template =
'#NEXUS
BEGIN TAXA;
TITLE Taxa;
DIMENSIONS NTAX=ntax_here;
TAXLABELS
taxlabels_here
;
END;
BEGIN CHARACTERS;
TITLE  Character_Matrix;
LINK TAXA = Taxa;
DIMENSIONS  NCHAR=nchar_here;
FORMAT DATATYPE = STANDARD GAP = - MISSING = ? SYMBOLS = "  0 1";
MATRIX
characterData_here
;
'
########################
nex = template
# add data to template
nex = gsub("ntax_here", numTax, nex)
nex = gsub("nchar_here", numChar, nex)
nex = gsub("taxlabels_here", taxlabels.string, nex)
nex = gsub("characterData_here", characterData.binary.string, nex)
cat(nex, file=filename)
}
d <- read.csv("data/WALS_WordOrder.csv", stringsAsFactors = F)
glottoData <- read.csv("data/Glottolog_Data.csv", stringsAsFactors = F)
d2 <- merge(d, glottoData, by.x='glottocode', by.y='glotto.code')
# Load data for Atlantic Congo
data = d2[d2$glotto.family=="Atlantic-Congo",]
# use only binary categories
data = data[data$BasicWordOrder %in% c("SVO","SOV"), ]
data = data[data$AdpositionOrder %in% c("Prepositions","Postpositions"), ]
taxlabels = data$iso_code
characterData = data[,c("BasicWordOrder","AdpositionOrder")]
makeNexusFile(taxlabels, characterData, "data/Atlantic-Congo.nex")
unique(d2$glotto.family)
sort(table(d2$glotto.family))
characterData.binary.string =
paste(
apply(
characterData.binary.withNames,
1,
paste,
collapse=' ')
,collapse='\n')
source('~/.active-rstudio-document', echo=TRUE)
characterData.binary.string =
paste(
apply(
characterData.binary.withNames,
1,
paste,
collapse=' ')
,collapse='\n')
